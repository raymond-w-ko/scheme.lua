local scheme = require 'scheme'

function datum_print(datum)
    io.write('---\n')
    for _, data in ipairs(datum) do
        io.write('type: ' .. data.type)
        io.write(' , ')
        io.write('value: ' .. tostring(data.value))
        io.write(' , ')
        io.write('tostring: ' .. tostring(data))
        io.write('\n')
    end
end

local datum

function boolean_test()
    datum = scheme.read('#t')
    datum_print(datum)
    datum = scheme.read(' #t')
    datum_print(datum)
    datum = scheme.read(' #t ')
    datum_print(datum)
    datum = scheme.read(' #t #t')
    datum_print(datum)

    datum = scheme.read('#f')
    datum_print(datum)
    datum = scheme.read(' #f')
    datum_print(datum)
    datum = scheme.read(' #f #f #f')
    datum_print(datum)
end

function character_test()
    datum = scheme.read('#\\a')
    datum_print(datum)
    datum = scheme.read('#\\newline')
    datum_print(datum)
    datum = scheme.read('#\\space')
    datum_print(datum)
    datum = scheme.read('#\\ ')
    datum_print(datum)
    --datum = scheme.read('#\\')
    --datum_print(datum)
end

function string_test()
    datum = scheme.read('"test"')
    datum_print(datum)
    datum = scheme.read('"t\\\\est"')
    datum_print(datum)
    datum = scheme.read('"t\\"est"')
    datum_print(datum)
    datum = scheme.read('"test\\\\"')
    datum_print(datum)
    datum = scheme.read('"test\\""')
    datum_print(datum)
end

function special_identifier_test()
    datum = scheme.read('+')
    datum_print(datum)
    datum = scheme.read('+ ')
    datum_print(datum)
    datum = scheme.read('-')
    datum_print(datum)
    datum = scheme.read('- ')
    datum_print(datum)
    datum = scheme.read('- ')
    datum_print(datum)
    datum = scheme.read('...')
    datum_print(datum)
    datum = scheme.read('... ')
    datum_print(datum)
end

function identifier_test()
    datum = scheme.read('asdf')
    datum_print(datum)
    datum = scheme.read('boolean?')
    datum_print(datum)
    datum = scheme.read(' boolean?')
    datum_print(datum)
    datum = scheme.read('boolean? ')
    datum_print(datum)
    datum = scheme.read(' boolean? ')
    datum_print(datum)
    datum = scheme.read('generic-lisp-identifier')
    datum_print(datum)
    datum = scheme.read('ice0')
    datum_print(datum)
    datum = scheme.read('ice9')
    datum_print(datum)
    --datum = scheme.read('@property')
    --datum_print(datum)
end

function list_test()
    datum_print(scheme.read('()'))
    datum_print(scheme.read('(#t)'))
    datum_print(scheme.read('(v)'))
    datum_print(scheme.read('(var)'))
    datum_print(scheme.read('(var1 var2 var3)'))
    datum_print(scheme.read('(var0 () (var1) (var2 var3) var3)'))
    datum_print(scheme.read('(var1 . var2)'))
    datum_print(scheme.read('((var0 . var1) (var2 . var3))'))
    datum_print(scheme.read('((var0 (()) (var1) (((var2) var3)) var3))'))
    --datum_print(scheme.read('(var0 . var1 . var2)'))
end

function vector_test()
    datum_print(scheme.read('#()'))
    datum_print(scheme.read('#(#t)'))
    datum_print(scheme.read('#(v)'))
    datum_print(scheme.read('#(var)'))
    datum_print(scheme.read('#(var1 var2 var3)'))
    datum_print(scheme.read('#(var0 #() (var1) (var2 var3) var3)'))
    datum_print(scheme.read('#(var0 #() (var1) #(var2 var3) var3)'))
    datum_print(scheme.read('#(var1 var2)'))
    datum_print(scheme.read('#(#(var0 var1) (var2 var3))'))
    datum_print(scheme.read('#((var0 (()) (var1) #((#(var2) var3)) var3))'))
end

function abbreviation_prefix_test()
    datum_print(scheme.read("'() 'asdf"))
    datum_print(scheme.read("''() asdf"))
    datum_print(scheme.read("''#() asdf"))
    datum_print(scheme.read("''() ''asdf ''#()"))
    datum_print(scheme.read("'..."))
    datum_print(scheme.read("'+"))
    datum_print(scheme.read("'-"))
    datum_print(scheme.read('\'"hello, world"'))
    datum_print(scheme.read('\'#t'))
    datum_print(scheme.read('\'#f'))
    datum_print(scheme.read('\'#\\space'))
    datum_print(scheme.read('\'#\\tab'))
    datum_print(scheme.read('\'#\\t'))
    datum_print(scheme.read("'( '() )"))
    datum_print(scheme.read("'( asdf )"))
    datum_print(scheme.read("'( '#( '() ) )"))
    --datum_print(scheme.read("''a asdf"))
    --datum_print(scheme.read("`() asdf"))
    --datum_print(scheme.read(",() asdf"))
    --datum_print(scheme.read(",@() asdf"))
    --datum_print(scheme.read(",,() asdf"))
    --datum_print(scheme.read("'"))
    --datum_print(scheme.read("`"))
    --datum_print(scheme.read(","))
end

boolean_test()
character_test()
string_test()
special_identifier_test()
identifier_test()
list_test()
vector_test()
abbreviation_prefix_test()
